qt(1-0.05/2, 18)
confint(model)
predict(model, newdata = data.frame(hydro = 1), interval = "confidence")
predict(model, newdata = data.frame(hydro = 1), interval = "confidence")
predict(model, newdata = data.frame(hydro = 1), interval = "prediction")
library("tidyverse")
distill = read.csv("hm_problem_1.csv", header=T)
attach(distill)
dim(distill)
model = lm(purity ~ hydro)
summary(model)
11.801/3.485
qt(1-0.05/2, 18)
confint(model)
predict(model, newdata = data.frame(hydro = 1), interval = "confidence")
predict(model, newdata = data.frame(hydro = 1), interval = "prediction")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
distill = read.csv("hm_problem_2.csv", header=T)
attach(distill)
dim(distill)
View(model)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
distill = read.csv("hm_problem_2.csv", header=T)
attach(distill)
dim(distill)
model = lm(purity ~ hydro)
summary(model)
model = lm(Returned.Impressions.per.week..millions. ~ Amount.Spent..Millions.)
summary(model)
model = lm(Returned.Impressions.per.week..millions. ~ Amount.Spent..Millions.)
summary(model)
model = lm(purity ~ hydro)
summary(model)
model = lm(Returned.Impressions.per.week..millions. ~ Amount.Spent..Millions.)
summary(model)
0.363/0.097
qt(1-0.05/2, 19)
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195), interval = "confidence")
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195), interval = "confidence", level = 0.8)
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195), interval = "confidence", level = 0.8)
predict(model, newdata = data.frame(Firm = MCI,Amount.Spent..Millions. = 195), interval = "confidence", level = 0.9)
View(distill)
predict(model, newdata = data.frame(Firm = MCI, Amount.Spent..Millions. = 195), interval = "confidence", level = 0.9)
predict(model, newdata = data.frame( Amount.Spent..Millions. = 195), interval = "confidence", level = 0.9)
?predict
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195, Firm = "MCI"), interval = "confidence", level = 0.9)
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195, Firm = "MCI"), interval = "confidence", level = 0.9)
predict(model, newdata = data.frame( Firm = "MCI",Amount.Spent..Millions. = 195), interval = "confidence", level = 0.9)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
distill = read.csv("hm_problem_2.csv", header=T)
attach(distill)
dim(distill)
model = lm(Returned.Impressions.per.week..millions. ~ Amount.Spent..Millions.)
summary(model)
0.363/0.097
qt(1-0.05/2, 19)
predict(model, newdata = data.frame( Firm = "MCI",Amount.Spent..Millions. = 195), interval = "confidence", level = 0.9)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
distill = read.csv("hm_problem_2.csv", header=T)
attach(distill)
dim(distill)
model = lm(Returned.Impressions.per.week..millions. ~ Amount.Spent..Millions.)
summary(model)
0.363/0.097
qt(1-0.05/2, 19)
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195), interval = "confidence", level = 0.9)
model = lm(Returned.Impressions.per.week..millions. ~ Amount.Spent..Millions.)
summary(model)
plot(Amount.Spent..Millions., Returned.Impressions.per.week..millions.,
xlab = "Amount Spent (millions)",
ylab = "Returned Impressions per Week (millions",
main = "Amount spent versus Returned Impressions per Week",
panel.last = lines(sort(Amount.Spent..Millions.)), fitted(model)[order(Amount.Spent..Millions.)])
plot(Amount.Spent..Millions., Returned.Impressions.per.week..millions.,
xlab = "Amount Spent (millions)",
ylab = "Returned Impressions per Week (millions",
main = "Amount spent versus Returned Impressions per Week",
panel.last = lines(sort(Amount.Spent..Millions.),
fitted(model)[order(Amount.Spent..Millions.)]))
model = lm(Returned.Impressions.per.week..millions. ~ Amount.Spent..Millions.)
summary(model)
plot(Amount.Spent..Millions., Returned.Impressions.per.week..millions.,
xlab = "Amount Spent (millions)",
ylab = "Returned Impressions per Week (millions)",
main = "Amount spent versus Returned Impressions per Week",
panel.last = lines(sort(Amount.Spent..Millions.),
fitted(model)[order(Amount.Spent..Millions.)]))
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195), interval = "confidence", level = 0.9)
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195), interval = "prediction", level = 0.9)
model = lm(purity ~ hydro)
summary(model)
plot(purity, hydro,
xlab = "Hydrocarbon (%)",
ylab = "Purity (%)",
main = "Purity percentage versus Hydrocarbon percentage",
panel.last = lines(sort(hydro),
fitted(model)[order(hydro)]))
library("tidyverse")
distill = read.csv("hm_problem_1.csv", header=T)
attach(distill)
dim(distill)
model = lm(purity ~ hydro)
summary(model)
plot(purity, hydro,
xlab = "Hydrocarbon (%)",
ylab = "Purity (%)",
main = "Purity percentage versus Hydrocarbon percentage",
panel.last = lines(sort(hydro),
fitted(model)[order(hydro)]))
11.801/3.485
qt(1-0.05/2, 18)
confint(model)
predict(model, newdata = data.frame(hydro = 1), interval = "confidence")
predict(model, newdata = data.frame(hydro = 1), interval = "prediction")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
distill = read.csv("hm_problem_2.csv", header=T)
attach(distill)
dim(distill)
model = lm(Returned.Impressions.per.week..millions. ~ Amount.Spent..Millions.)
summary(model)
plot(Amount.Spent..Millions., Returned.Impressions.per.week..millions.,
xlab = "Amount Spent (millions)",
ylab = "Returned Impressions per week (millions)",
main = "Returned Impressions per week versus Amount spent ",
panel.last = lines(sort(Amount.Spent..Millions.),
fitted(model)[order(Amount.Spent..Millions.)]))
0.363/0.097
qt(1-0.05/2, 19)
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195), interval = "confidence", level = 0.9)
predict(model, newdata = data.frame(Amount.Spent..Millions. = 195), interval = "prediction", level = 0.9)
library("tidyverse")
distill = read.csv("hm_problem_1.csv", header=T)
attach(distill)
dim(distill)
model = lm(purity ~ hydro)
summary(model)
plot(purity, hydro,
xlab = "Hydrocarbon (%)",
ylab = "Purity (%)",
main = "Purity percentage versus Hydrocarbon percentage",
panel.last = lines(sort(hydro),
fitted(model)[order(hydro)]))
11.801/3.485
qt(1-0.05/2, 18)
confint(model)
predict(model, newdata = data.frame(hydro = 1), interval = "confidence")
predict(model, newdata = data.frame(hydro = 1), interval = "prediction")
model = lm(purity ~ hydro)
summary(model)
plot(purity, hydro,
xlab = "Hydrocarbon (%)",
ylab = "Purity (%)",
main = "Purity percentage versus Hydrocarbon percentage",
panel.last = lines(sort(hydro), fitted(model)[order(hydro)]))
library("tidyverse")
distill = read.csv("hm_problem_1.csv", header=T)
attach(distill)
dim(distill)
model = lm(purity ~ hydro)
summary(model)
plot(purity, hydro,
xlab = "Hydrocarbon (%)",
ylab = "Purity (%)",
main = "Purity percentage versus Hydrocarbon percentage",
panel.last = lines(sort(hydro), fitted(model)[order(hydro)]))
11.801/3.485
qt(1-0.05/2, 18)
confint(model)
predict(model, newdata = data.frame(hydro = 1), interval = "confidence")
predict(model, newdata = data.frame(hydro = 1), interval = "prediction")
# output for b.
11.801/3.485
qt(1-0.05/2, 18)
# output for c
confint(model)
# output for d.
predict(model, newdata = data.frame(hydro = 1), interval = "confidence")
# output for e.
predict(model, newdata = data.frame(hydro = 1), interval = "prediction")
dev.off()
library(TDA) # upload TDA package
S <- cbind(c(0,1,2,3),c(0,3,-1,2)) # write S into R
# Compute Rips Filtration. maxdimension is max dim of homological features
# to be computed, maxscale is the filtration limit.
RipsFilt <- ripsFiltration(S, maxdimension = 2, maxscale = 5,
dist = "euclidean")
library(plotrix) # packages for plot function
library(animation)
class(RipsFilt) <- c(class(RipsFilt), "rips_filt")
plot(RipsFilt, animate = TRUE, fn_out = 'rips_example.gif',
lout = 80, interval = 0.2)
plot(RipsFilt$cmplx, animate = TRUE, fn_out = 'rips_example.gif',
lout = 80, interval = 0.2)
plot(RipsFilt$coordinates, animate = TRUE, fn_out = 'rips_example.gif',
lout = 80, interval = 0.2)
?plot
?ripsFiltration
knitr::opts_chunk$set(echo = TRUE)
dat = read.csv("hm4_problem1.csv", header=T)
attach(dat)
dim(dat)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/dawsonkinsman/Library/Mobile Documents/com~apple~CloudDocs/F22/ARA/HW/4")
dat = read.csv("hm4_problem1.csv", header=T)
attach(dat)
dat = read.csv("hm4_problem1.csv", header=T)
attach(dat)
model = lm(y ~ x1 +x2+x3+x4+x5+x6+x7+x8+x9+x10+x11)
qqnorm(residuals(model), main = 'Normal Probability Plot of Residuals', datax = TRUE)
qqline(residuals(model), datax = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/dawsonkinsman/Library/Mobile Documents/com~apple~CloudDocs/F22/ARA/HW/4")
dat = read.csv("hm4_problem1.csv", header=T)
attach(dat)
detach(dat)
detach(dat)
detach(dat)
model = lm(y ~ x1 +x2+x3+x4+x5+x6+x7+x8+x9+x10+x11)
qqnorm(residuals(model), main = 'Normal Probability Plot of Residuals', datax = TRUE)
qqline(residuals(model), datax = TRUE)
plot(x = fitted(model), y = residuals(model), xlab = 'Fitted values', ylab = 'Residuals', panel.last = abline(h = =0, lty = 2))
plot(x = fitted(model), y = residuals(model), xlab = 'Fitted values', ylab = 'Residuals', panel.last = abline(h =0, lty = 2))
rstandard(model)
rstudent(model)
rstandard(model)
```{r}
dat2 = read.csv("hm4_problem1.csv", header=T)
attach(dat2)
w = x^2
dat2 = read.csv("hm4_problem1.csv", header=T)
attach(dat2)
w = x^2
dat2 = read.csv("hm4_problem2.csv", header=T)
attach(dat2)
w = x^2
model2 = lm( y ~x +w)
summary(model)
w = x^2
model2 = lm( y ~x +w)
summary(model2)
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 100)
newxsq = newx^2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx^2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 100)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
detach(dat2)
dat2 = read.csv("hm4_problem2.csv", header=T)
attach(dat2)
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
model3 = lm(y ~1.)
anova(model3, model2)
model3 = lm(y ~1.)
summary(model2)
summary(model3)
anova(model3, model2)
1.2589183 + 0.0349408+0.0002329
1.4766/12
47.31/2
table = "
|Source|df|SS|MS|F|$p-value$|
------
|Regression|2|47.31|23.655|1858613|<2.2e-16
|Error| 7|0.00|0
|Total| 9|
"
cat(table)
table = "
|Source|df|SS|MS|F|$p-value$|
------
|Regression|2|47.31|23.655|1858613|<2.2e-16
|Error| 7|0.00|0|-|-|
|Total| 9|-|-|-|-|
"
cat(table)
table = "
|Source|df|SS|MS|F|$p-value$|
------
|Regression|2|47.31|23.655|1858613|<2.2e-16
|Error| 7|0.00|0|-|-|
|Total| 9|-|-|-|-|
"
cat(table)
table = "
|Source|df|SS|MS|F|$p-value$|
|Regression|2|47.31|23.655|1858613|<2.2e-16
|Error| 7|0.00|0|-|-|
|Total| 9|-|-|-|-|
"
cat(table)
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 100)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
qf(1-0.05, 2, 7)
model = lm(y ~x)
model2 = lm(y ~x+w)
anova(model, model2)
dat2 = read.csv("hm4_problem2.csv", header=T)
w = x^2
model2 = lm( y ~x +w, data = dat2)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
model3 = lm(y ~1., data = dat2)
anova(model3, model2)
model = lm(y ~x, data = dat2)
model2 = lm(y ~x+w, data = dat2)
anova(model, model2)
4.6069/(0.0001/7)
detach(dat2)
detach(dat2)
detach(dat2)
detach(dat)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/dawsonkinsman/Library/Mobile Documents/com~apple~CloudDocs/F22/ARA/HW/4")
dat = read.csv("hm4_problem1.csv", header=T)
model = lm(y ~ x1 +x2+x3+x4+x5+x6+x7+x8+x9+x10+x11, data = dat)
qqnorm(residuals(model), main = 'Normal Probability Plot of Residuals', datax = TRUE)
qqline(residuals(model), datax = TRUE)
plot(x = fitted(model), y = residuals(model), xlab = 'Fitted values', ylab = 'Residuals', panel.last = abline(h =0, lty = 2))
rstudent(model)
rstandard(model)
dat2 = read.csv("hm4_problem2.csv", header=T)
w = x^2
model3 = lm(y ~1., data = dat2)
anova(model3, model2)
w = dat2$x^2
w = dat2$x^2
model2 = lm( y ~x +w, data = dat2)
summary(model2)
newx = seq(min(x), max(x), length = 32)
w = dat2$x^2
model2 = lm( y ~x +w, data = dat2)
summary(model2)
newx = seq(min(dat2$x), max(dat2$x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = dat2$x^2
model2 = lm( y ~x +w, data = dat2)
summary(model2)
newx = seq(min(dat2$x), max(dat2$x), length = 32)
newxsq = newx**2
plot(x = dat2$x, y = dat2$y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
dat2 = read.csv("hm4_problem2.csv", header=T)
attach(dat2)
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
dat2 = read.csv("hm4_problem2.csv", header=T)
attach(dat2)
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
detach(dat2)
detach(dat2)
dat2 = read.csv("hm4_problem2.csv", header=T)
attach(dat2)
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model, newdata = data.frame(x = newx, w = newxsq))))
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model2, newdata = data.frame(x = newx, w = newxsq))))
detach(dat2)
model3 = lm(y ~1., data = dat2)
anova(model3, model2)
model3 = lm(y ~1., data = dat2)
anova(model3, model2)
(47.31/2)/(0/7)
print.anova(model3, model2, digits = 5)
print(anova(model3, model2), digits = 5)
print(anova(model3, model2), digits = 7)
print(anova(model3, model2), digits = 8)
print(anova(model3, model2), digits = 9)
47.3101609/2
(47.3101609/2)/(0.0000891/7)
model = lm(y ~x, data = dat2)
model2 = lm(y ~x+w, data = dat2)
anova(model, model2)
1.2739/(0.7168/12)
model = lm(y ~x, data = dat2)
model2 = lm(y ~x+w, data = dat2)
print(anova(model, model2), digits = 8)
4.6070255/(0.0000891/7)
qf(1-0.05, 1, 12)
qf(1-0.05, 1, 7)
residuals(model2)
plot(x = fitted(model2), y = residuals(model2), xlab = 'Fitted values', ylab = 'Residuals', panel.last = abline(h=0, lty=2))
w = x^2
dat2 = read.csv("hm4_problem2.csv", header=T)
attach(dat2)
w = x^2
model2 = lm( y ~x +w)
summary(model2)
newx = seq(min(x), max(x), length = 32)
newxsq = newx**2
plot(x = x, y = y, panel.last = lines(newx, predict(model2, newdata = data.frame(x = newx, w = newxsq))))
detach(dat2)
library(TDA)
library(tidyverse)
df = read.csv(file = 'raw/mpv-data.csv')
getwd
getwd()
setwd("~/Dropbox (University of Michigan)/Research 22/mpv-research")
library(TDA)
library(tidyverse)
df = read.csv(file = 'raw/mpv-data.csv')
states =
mi = df %>% filter(state == "MI") %>% subset(select = c('latitude','longitude'))
coords = cbind(mi$longitude, mi$latitude)
FltAlphaComplex <- alphaComplexFiltration(X = coords, printProgress = TRUE)
# plot alpha complex filtration
lim <- c( -90, -80, 41,48
plot(NULL, type = "n", xlim = lim[1:2], ylim = lim[3:4],
library(TDA)
library(tidyverse)
df = read.csv(file = 'raw/mpv-data.csv')
states =
mi = df %>% filter(state == "MI") %>% subset(select = c('latitude','longitude'))
coords = cbind(mi$longitude, mi$latitude)
FltAlphaComplex <- alphaComplexFiltration(X = coords, printProgress = TRUE)
# plot alpha complex filtration
lim <- c( -90, -80, 41,48)
plot(NULL, type = "n", xlim = lim[1:2], ylim = lim[3:4],
main = "Alpha Complex Filtration Plot")
for (idx in seq(along = FltAlphaComplex[["cmplx"]])) {
polygon(FltAlphaComplex[["coordinates"]][FltAlphaComplex[["cmplx"]][[idx]], , drop = FALSE],
col = "pink", border = NA, xlim = lim[1:2], ylim = lim[3:4])
}
for (idx in seq(along = FltAlphaComplex[["cmplx"]])) {
polygon(FltAlphaComplex[["coordinates"]][FltAlphaComplex[["cmplx"]][[idx]], , drop = FALSE],
col = NULL, xlim = lim[1:2], ylim = lim[3:4])
}
points(FltAlphaComplex[["coordinates"]], pch = 16)
FltRips <- ripsFiltration(X = coords, maxdimension = 2,
maxscale = 2, dist = "euclidean", library = "GUDHI",
printProgress = TRUE)
# plot rips filtration
plot(NULL, type = "n", xlim = lim[1:2], ylim = lim[3:4],
main = "Rips Filtration Plot")
for (idx in seq(along = FltRips[["cmplx"]])) {
polygon(FltRips[["coordinates"]][FltRips[["cmplx"]][[idx]], , drop = FALSE],
col = "pink", border = NA, xlim = lim[1:2], ylim = lim[3:4])
}
